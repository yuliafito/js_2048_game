{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Game.getInitialState();\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.initialState = JSON.parse(JSON.stringify(initialState));\n        this.state = initialState;\n        this.score = 0;\n        this.status = Game.gameStatus.idle;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status === Game.gameStatus.idle) {\n                    this.status = Game.gameStatus.playing;\n                    this.addRandomTile();\n                    this.addRandomTile();\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.score = 0;\n                this.state = this.initialState;\n                this.status = Game.gameStatus.idle;\n            }\n        },\n        {\n            key: \"mergeAndSlideRow\",\n            value: function mergeAndSlideRow(row) {\n                var nonEmptyValues = row.filter(function(value) {\n                    return value;\n                });\n                var mergedRow = [];\n                for(var i = 0; i < nonEmptyValues.length; i++)if (nonEmptyValues[i] === nonEmptyValues[i + 1]) {\n                    mergedRow.push(nonEmptyValues[i] * 2);\n                    this.score += nonEmptyValues[i] * 2;\n                    i++;\n                } else mergedRow.push(nonEmptyValues[i]);\n                return mergedRow.concat(Array(4 - mergedRow.length).fill(0));\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.status !== Game.gameStatus.playing) return;\n                var originalState = JSON.stringify(this.state);\n                this.state = this.state.map(function(row) {\n                    return _this.mergeAndSlideRow(row);\n                });\n                if (JSON.stringify(this.state) !== originalState) {\n                    this.addRandomTile();\n                    this.updateStatus();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.status !== Game.gameStatus.playing) return;\n                var originalState = JSON.stringify(this.state);\n                this.state = this.state.map(function(row) {\n                    var reversedRow = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row).reverse();\n                    var mergedRow = _this.mergeAndSlideRow(reversedRow);\n                    return mergedRow.reverse();\n                });\n                if (JSON.stringify(this.state) !== originalState) {\n                    this.addRandomTile();\n                    this.updateStatus();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                if (this.status !== Game.gameStatus.playing) return;\n                var originalState = JSON.stringify(this.state);\n                var transposedState = this.transpose(this.state);\n                this.state = transposedState.map(function(row) {\n                    return _this.mergeAndSlideRow(row);\n                });\n                this.state = this.transpose(this.state);\n                if (JSON.stringify(this.state) !== originalState) {\n                    this.addRandomTile();\n                    this.updateStatus();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                if (this.status !== Game.gameStatus.playing) return;\n                var originalState = JSON.stringify(this.state);\n                this.state = this.transpose(this.state).map(function(column) {\n                    var reversedColumn = column.reverse();\n                    var mergedColumn = _this.mergeAndSlideRow(reversedColumn);\n                    return mergedColumn.reverse();\n                });\n                this.state = this.transpose(this.state);\n                if (JSON.stringify(this.state) !== originalState) {\n                    this.addRandomTile();\n                    this.updateStatus();\n                }\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose(state) {\n                return state[0].map(function(_, i) {\n                    return state.map(function(row) {\n                        return row[i];\n                    });\n                });\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.state[row][col] === 0) emptyCells.push([\n                        row,\n                        col\n                    ]);\n                }\n                if (emptyCells.length > 0) {\n                    var _emptyCells_Math_floor = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(emptyCells[Math.floor(Math.random() * emptyCells.length)], 2), row1 = _emptyCells_Math_floor[0], col1 = _emptyCells_Math_floor[1];\n                    this.state[row1][col1] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"updateStatus\",\n            value: function updateStatus() {\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.state[row][col] === 2048) {\n                        this.status = Game.gameStatus.win;\n                        return;\n                    }\n                }\n                if (!this.hasAvailableMoves()) this.status = Game.gameStatus.lose;\n            }\n        },\n        {\n            key: \"hasAvailableMoves\",\n            value: function hasAvailableMoves() {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    if (this.state[row][col] === 0) return true;\n                    if (col < 3 && this.state[row][col] === this.state[row][col + 1]) return true;\n                    if (row < 3 && this.state[row][col] === this.state[row + 1][col]) return true;\n                }\n                return false;\n            }\n        }\n    ], [\n        {\n            key: \"getInitialState\",\n            value: function getInitialState() {\n                return [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$var$Game, \"gameStatus\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nfunction $197cd56b15c33885$var$updateField() {\n    var field = $197cd56b15c33885$var$game.getState();\n    var fieldRows = document.querySelectorAll(\".field-row\");\n    fieldRows.forEach(function(row, rowIndex) {\n        var cells = row.querySelectorAll(\".field-cell\");\n        cells.forEach(function(cell, cellIndex) {\n            var value = field[rowIndex][cellIndex];\n            cell.setAttribute(\"class\", \"field-cell\");\n            cell.textContent = \"\";\n            if (value !== 0) {\n                cell.classList.add(\"field-cell--\".concat(value));\n                cell.textContent = value;\n            }\n        });\n    });\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$updateGameMessages();\n}\nfunction $197cd56b15c33885$var$updateGameMessages() {\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    switch($197cd56b15c33885$var$game.getStatus()){\n        case $3d28d7f1aac198f5$exports.gameStatus.win:\n            $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n            break;\n        case $3d28d7f1aac198f5$exports.gameStatus.lose:\n            $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n            break;\n        case $3d28d7f1aac198f5$exports.gameStatus.idle:\n            $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n            break;\n    }\n}\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.gameStatus.playing) {\n        switch(e.key){\n            case \"ArrowLeft\":\n                $197cd56b15c33885$var$game.moveLeft();\n                break;\n            case \"ArrowRight\":\n                $197cd56b15c33885$var$game.moveRight();\n                break;\n            case \"ArrowUp\":\n                $197cd56b15c33885$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                $197cd56b15c33885$var$game.moveDown();\n                break;\n        }\n        $197cd56b15c33885$var$updateField();\n    }\n});\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.gameStatus.idle) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n        $197cd56b15c33885$var$startButton.classList.replace(\"start\", \"restart\");\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$startButton.textContent = \"Start\";\n        $197cd56b15c33885$var$startButton.classList.replace(\"restart\", \"start\");\n    }\n    $197cd56b15c33885$var$updateField();\n});\n\n})();\n//# sourceMappingURL=index.324bdc47.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst score = document.querySelector('.game-score');\nconst startButton = document.querySelector('.button.start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\n\nfunction updateField() {\n  const field = game.getState();\n  const fieldRows = document.querySelectorAll('.field-row');\n\n  fieldRows.forEach((row, rowIndex) => {\n    const cells = row.querySelectorAll('.field-cell');\n\n    cells.forEach((cell, cellIndex) => {\n      const value = field[rowIndex][cellIndex];\n\n      cell.setAttribute('class', 'field-cell');\n      cell.textContent = '';\n\n      if (value !== 0) {\n        cell.classList.add(`field-cell--${value}`);\n        cell.textContent = value;\n      }\n    });\n  });\n\n  score.textContent = game.getScore();\n  updateGameMessages();\n}\n\nfunction updateGameMessages() {\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageStart.classList.add('hidden');\n\n  switch (game.getStatus()) {\n    case Game.gameStatus.win:\n      messageWin.classList.remove('hidden');\n      break;\n    case Game.gameStatus.lose:\n      messageLose.classList.remove('hidden');\n      break;\n    case Game.gameStatus.idle:\n      messageStart.classList.remove('hidden');\n      break;\n  }\n}\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() === Game.gameStatus.playing) {\n    switch (e.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n    }\n\n    updateField();\n  }\n});\n\nstartButton.addEventListener('click', () => {\n  if (game.getStatus() === Game.gameStatus.idle) {\n    game.start();\n    startButton.textContent = 'Restart';\n    startButton.classList.replace('start', 'restart');\n  } else {\n    game.restart();\n    startButton.textContent = 'Start';\n    startButton.classList.replace('restart', 'start');\n  }\n\n  updateField();\n});\n","'use strict';\n\nclass Game {\n  static gameStatus = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  static getInitialState() {\n    return [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n  }\n\n  constructor(initialState = Game.getInitialState()) {\n    this.initialState = JSON.parse(JSON.stringify(initialState));\n    this.state = initialState;\n    this.score = 0;\n    this.status = Game.gameStatus.idle;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    if (this.status === Game.gameStatus.idle) {\n      this.status = Game.gameStatus.playing;\n      this.addRandomTile();\n      this.addRandomTile();\n    }\n  }\n\n  restart() {\n    this.score = 0;\n    this.state = this.initialState;\n    this.status = Game.gameStatus.idle;\n  }\n\n  mergeAndSlideRow(row) {\n    const nonEmptyValues = row.filter((value) => value);\n    const mergedRow = [];\n\n    for (let i = 0; i < nonEmptyValues.length; i++) {\n      if (nonEmptyValues[i] === nonEmptyValues[i + 1]) {\n        mergedRow.push(nonEmptyValues[i] * 2);\n        this.score += nonEmptyValues[i] * 2;\n        i++;\n      } else {\n        mergedRow.push(nonEmptyValues[i]);\n      }\n    }\n\n    return mergedRow.concat(Array(4 - mergedRow.length).fill(0));\n  }\n\n  moveLeft() {\n    if (this.status !== Game.gameStatus.playing) {\n      return;\n    }\n\n    const originalState = JSON.stringify(this.state);\n\n    this.state = this.state.map((row) => this.mergeAndSlideRow(row));\n\n    if (JSON.stringify(this.state) !== originalState) {\n      this.addRandomTile();\n      this.updateStatus();\n    }\n  }\n\n  moveRight() {\n    if (this.status !== Game.gameStatus.playing) {\n      return;\n    }\n\n    const originalState = JSON.stringify(this.state);\n\n    this.state = this.state.map((row) => {\n      const reversedRow = [...row].reverse();\n      const mergedRow = this.mergeAndSlideRow(reversedRow);\n\n      return mergedRow.reverse();\n    });\n\n    if (JSON.stringify(this.state) !== originalState) {\n      this.addRandomTile();\n      this.updateStatus();\n    }\n  }\n\n  moveUp() {\n    if (this.status !== Game.gameStatus.playing) {\n      return;\n    }\n\n    const originalState = JSON.stringify(this.state);\n\n    const transposedState = this.transpose(this.state);\n\n    this.state = transposedState.map((row) => this.mergeAndSlideRow(row));\n    this.state = this.transpose(this.state);\n\n    if (JSON.stringify(this.state) !== originalState) {\n      this.addRandomTile();\n      this.updateStatus();\n    }\n  }\n\n  moveDown() {\n    if (this.status !== Game.gameStatus.playing) {\n      return;\n    }\n\n    const originalState = JSON.stringify(this.state);\n\n    this.state = this.transpose(this.state).map((column) => {\n      const reversedColumn = column.reverse();\n      const mergedColumn = this.mergeAndSlideRow(reversedColumn);\n\n      return mergedColumn.reverse();\n    });\n\n    this.state = this.transpose(this.state);\n\n    if (JSON.stringify(this.state) !== originalState) {\n      this.addRandomTile();\n      this.updateStatus();\n    }\n  }\n\n  transpose(state) {\n    return state[0].map((_, i) => state.map((row) => row[i]));\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.state[row][col] === 0) {\n          emptyCells.push([row, col]);\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const [row, col] =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      this.state[row][col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  updateStatus() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.state[row][col] === 2048) {\n          this.status = Game.gameStatus.win;\n\n          return;\n        }\n      }\n    }\n\n    if (!this.hasAvailableMoves()) {\n      this.status = Game.gameStatus.lose;\n    }\n  }\n\n  hasAvailableMoves() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.state[row][col] === 0) {\n          return true;\n        }\n\n        if (col < 3 && this.state[row][col] === this.state[row][col + 1]) {\n          return true;\n        }\n\n        if (row < 3 && this.state[row][col] === this.state[row + 1][col]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["key","value","$3d28d7f1aac198f5$exports","$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","$3d28d7f1aac198f5$var$Game","protoProps","staticProps","Game","initialState","arguments","getInitialState","instance","Constructor","TypeError","JSON","parse","stringify","state","score","status","gameStatus","idle","playing","addRandomTile","row","nonEmptyValues","filter","mergedRow","push","concat","fill","_this","originalState","map","mergeAndSlideRow","updateStatus","reversedRow","isArray","iter","Symbol","iterator","reverse","transposedState","transpose","column","reversedColumn","mergedColumn","_","emptyCells","col","_emptyCells_Math_floor","Math","floor","random","_s","_e","_i","_arr","_n","_d","next","done","err","row1","col1","win","hasAvailableMoves","lose","obj","$197cd56b15c33885$var$game","$197cd56b15c33885$var$score","document","querySelector","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$updateField","field","getState","fieldRows","querySelectorAll","forEach","rowIndex","cells","cell","cellIndex","setAttribute","textContent","classList","add","getScore","$197cd56b15c33885$var$updateGameMessages","getStatus","remove","addEventListener","e","moveLeft","moveRight","moveUp","moveDown","start","replace","restart"],"version":3,"file":"index.324bdc47.js.map"}